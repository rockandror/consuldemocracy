<div class="poll-question-answers">
  <% if question.vote_type == "open" %>
    <% if can?(:answer, question) && !question.poll.voted_in_booth?(current_user) %>
      <%= form_tag answer_question_path(question), remote: true, id: "question-#{question.id}", class: "text-input-form" do %>
        <%= text_area_tag :answer, open_answer, rows: 4, required: true, id: "open-answer-question-#{question.id}", "aria-label": question.title %>
        <% if open_answer.empty? %>
          <%= submit_tag(t("poll_questions.show.open.answer"), class: "button secondary hollow") %>
        <% else %>
          <%= submit_tag(t("poll_questions.show.open.answered"), class: "button answered") %>
        <% end %>
      <% end %>
    <% elsif !user_signed_in? %>
      <%= text_area_tag :answer, nil, rows: 4, required: true, id: "open-answer-question-#{question.id}", "aria-label": question.title, disabled: true %>
      <%= link_to t("poll_questions.show.open.answer"), new_user_session_path, class: "button secondary hollow" %>
    <% elsif !current_user.level_two_or_three_verified? %>
      <%= text_area_tag :answer, nil, rows: 4, required: true, id: "open-answer-question-#{question.id}", "aria-label": question.title, disabled: true %>
      <%= link_to t("poll_questions.show.open.answer"), verification_path, class: "button secondary hollow" %>
    <% else %>
      <%= text_area_tag :answer, open_answer, rows: 4, required: true, id: "open-answer-question-#{question.id}", "aria-label": question.title, disabled: true %>
    <% end %>
  <% end %>

  <% if question.vote_type == "info_gender" %>
    <% if can?(:answer, question) && !question.poll.voted_in_booth?(current_user) %>
      <%= form_tag answer_question_path(question), remote: true, :"data-turbolinks"=>"true", id: "question-#{question.id}", class: "text-input-form" do %>
          <% select_options = User::GENDER.map { |g| [t("activemodel.models.user.gender.#{g}"), g] } %>
          <%= select_tag :answer,
              options_for_select(select_options, selected: info_gender_answer),
              label: t("devise_views.users.registrations.new.gender_label"),
              include_blank: true %>
        <% if question.answers.by_author(current_user).present? %>
          <%= submit_tag("Enviado", :class => "button answered") %>
        <% else %>
          <%= submit_tag("Enviar", :class => "button secondary hollow") %>
        <% end %>
      <% end %>
    <% else %>
      <%= form_tag answer_question_path(question), remote: true, :"data-turbolinks"=>"true", id: "question-#{question.id}", class: "text-input-form" do %>
          <% select_options = User::GENDER.map { |g| [t("activemodel.models.user.gender.#{g}"), g] } %>
          <%= select_tag :answer,
              options_for_select(select_options, selected: info_gender_answer),
              label: t("devise_views.users.registrations.new.gender_label"),
              include_blank: true, disabled: true %>
      <% end %>
    <% end %>
  <% elsif question.vote_type == "info_birthdate" %>
    <% if can?(:answer, question) && !question.poll.voted_in_booth?(current_user) %>
      <%= form_tag answer_question_path(question), remote: true, :"data-turbolinks"=>"true", id: "question-#{question.id}" do %>
        <%= date_select(:answer, "date_of_birth", selected: info_birthdate, start_year: 1900, end_year: 2030) %>
        <% if question.answers.by_author(current_user).present? %>
          <%= submit_tag("Enviado", :class => "button answered") %>
        <% else %>
          <%= submit_tag("Enviar", :class => "button secondary hollow") %>
        <% end %>
      <% end %>
    <% else %>
      <%= date_select(:answer, "date_of_birth", selected: info_birthdate, start_year: 1900, end_year: 2030, disabled: true) %>
    <% end %>
  <% elsif question.vote_type == "info_locality" %>
    <% if can?(:answer, question) && !question.poll.voted_in_booth?(current_user) %>
    <%= form_tag answer_question_path(question), remote: true, :"data-turbolinks"=>"true", id: "question-#{question.id}" do %>
        <% select_options = Geozone.order(:name).map { |geozone| [geozone.name, geozone.id] } %>
        <%= select_tag :answer,
          options_for_select(select_options, selected: info_locality),
          include_blank: true %>
        <% if question.answers.by_author(current_user).present? %>
          <%= submit_tag("Enviado", :class => "button answered") %>
        <% else %>
          <%= submit_tag("Enviar", :class => "button secondary hollow") %>
        <% end %>
      <% end %>
    <% else %>
      <% select_options = Geozone.order(:name).map { |geozone| [geozone.name, geozone.id] } %>
      <%= select_tag :answer,
        options_for_select(select_options, selected: info_locality),
        include_blank: true, disabled: true %>
    <% end %>
  <% end %>

  <% if can?(:answer, question) && !question.poll.voted_in_booth?(current_user) %>
    <% question_answers.each do |question_answer| %>
      <% if already_answered?(question_answer) %>
        <%= button_to question_answer_path(question, user_answer(question_answer)),
                      method: :delete,
                      remote: true,
                      title: t("poll_questions.show.voted", answer: question_answer.title),
                      class: "button answered",
                      "aria-pressed": true do %>
          <%= question_answer.title %>
        <% end %>
      <% else %>
        <%= button_to answer_question_path(question, answer: question_answer.title),
                      remote: true,
                      title: t("poll_questions.show.vote_answer", answer: question_answer.title),
                      class: "button secondary hollow",
                      "aria-pressed": false,
                      disabled: disable_answer?(question_answer) do %>
          <%= question_answer.title %>
        <% end %>
      <% end %>
    <% end %>
  <% elsif !user_signed_in? %>
    <% question_answers.each do |question_answer| %>
      <%= link_to question_answer.title, new_user_session_path, class: "button secondary hollow" %>
    <% end %>
  <% elsif !current_user.level_two_or_three_verified? %>
    <% question_answers.each do |question_answer| %>
      <%= link_to question_answer.title, verification_path, class: "button secondary hollow" %>
    <% end %>
  <% else %>
    <% question_answers.each do |question_answer| %>
      <span class="button secondary hollow disabled"><%= question_answer.title %></span>
    <% end %>
  <% end %>
</div>
